{"version":3,"sources":["components/app/components/header/profileimage.jpeg","components/app/components/header/index.jsx","components/app/components/contact-info/index.jsx","components/app/components/skills/index.jsx","components/app/components/langs/index.jsx","components/app/components/profile/index.jsx","components/app/components/experience/index.jsx","components/app/components/education/index.jsx","components/app/components/tag-cloud/index.jsx","components/app/index.jsx","serviceWorker.js","index.js"],"names":["module","exports","Header","user","this","props","className","src","profileImage","alt","fullname","job","href","company_url","target","company","Component","library","add","fab","faPhone","faAt","faBirthdayCake","faGlobeEurope","faSpinner","ContactInfo","state","showForm","loading","name","email","comment","renderForm","bind","closeModal","handleSubmit","event","preventDefault","setState","config","params","data","JSON","stringify","mode","axios","get","then","res","catch","stopPropagation","onSubmit","aria-label","onClick","icon","size","pulse","type","value","onChange","siteurl","sitename","faLinkedin","linkedinurl","linkedinuser","birthday","Skills","skills","length","map","skill","key","id","percentage","max","Langs","Profile","bio","bio_ref","Experience","experience","exp","start","end","title","description","Education","education","edu","MyTagCloud","setInterval","forceUpdate","tags","random","Math","style","fontFamily","fontSize","color","randomColor","padding","width","height","tag","fontStyle","fontWeight","rotate","App","ReactGA","initialize","pageview","window","location","pathname","search","filter","s","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9950dc5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profileimage.2adb9eeb.jpeg\";","import React, { Component } from \"react\";\nimport profileImage from \"./profileimage.jpeg\";\nimport \"./styles.css\";\n\nclass Header extends Component {\n  render() {\n    const { user } = this.props;\n    return (\n      <section className=\"header columns\">\n        <div className=\"profile-image column is-one-third\">\n          <img src={profileImage} alt={user.fullname} />\n        </div>\n        <div className=\"info\">\n          <h1 className=\"full-name title\">{user.fullname}</h1>\n          <h2 className=\"job subtitle\">\n            <strong>{user.job}</strong> en{\" \"}\n            <a href={user.company_url} target=\"_black\" alt={user.company}>\n              {user.company}\n            </a>\n          </h2>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Header;\n","/* eslint-disable */\nimport React, { Component } from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { fab, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faPhone,\n  faAt,\n  faBirthdayCake,\n  faGlobeEurope,\n  faSpinner\n} from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\n\nimport \"./styles.css\";\n\nlibrary.add(fab, faPhone, faAt, faBirthdayCake, faGlobeEurope, faSpinner);\n\nclass ContactInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showForm: false,\n      loading: false,\n      name: \"\",\n      email: \"\",\n      comment: \"\"\n    };\n\n    this.renderForm = this.renderForm.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({ loading: true });\n    var config = {\n      params: {\n        // data: btoa(\n        //   JSON.stringify({\n        //     name: this.state.name,\n        //     email: this.state.email,\n        //     comment: this.state.comment\n        //   })\n        // )\n        data: JSON.stringify({\n          name: this.state.name,\n          email: this.state.email,\n          comment: this.state.comment\n        })\n      },\n      mode: \"cors\"\n    };\n\n    axios\n      .get(`//jgmcloud.000webhostapp.com/cvapi/contact`, config)\n      .then(res => {\n        const data = res.data;\n        this.setState({\n          loading: false,\n          showForm: false,\n          name: \"\",\n          email: \"\",\n          comment: \"\"\n        });\n      })\n      .catch(() => {\n        this.setState({\n          loading: false\n        });\n      });\n  }\n\n  closeModal(event) {\n    this.setState({ showForm: false });\n    event.stopPropagation();\n  }\n\n  renderForm() {\n    const { loading } = this.state;\n\n    return (\n      <div className=\"modal form-container is-active\">\n        <div className=\"modal-background\"></div>\n        <div className=\"modal-card form\">\n          <form onSubmit={this.handleSubmit}>\n            <header className=\"modal-card-head\">\n              <div className=\"modal-card-title\">Contactar</div>\n              <button\n                className=\"delete\"\n                aria-label=\"close\"\n                onClick={this.closeModal}\n              ></button>\n            </header>\n            {loading ? (\n              <section className=\"modal-card-body\">\n                <div className=\"is-loading\">\n                  <FontAwesomeIcon icon=\"spinner\" size=\"4x\" pulse />\n                </div>\n              </section>\n            ) : (\n              <section className=\"modal-card-body\">\n                <div className=\"field\">\n                  <label className=\"label\">Nombre</label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      value={this.state.name}\n                      onChange={event =>\n                        this.setState({\n                          name: event.target.value\n                        })\n                      }\n                    />\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label className=\"label\">Email</label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      value={this.state.email}\n                      onChange={event =>\n                        this.setState({\n                          email: event.target.value\n                        })\n                      }\n                    />\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label className=\"label\">\n                    Cuéntame por qué quieres contactarme\n                  </label>\n                  <div className=\"control\">\n                    <textarea\n                      className=\"textarea\"\n                      type=\"text\"\n                      value={this.state.comment}\n                      onChange={event =>\n                        this.setState({\n                          comment: event.target.value\n                        })\n                      }\n                    />\n                  </div>\n                </div>\n              </section>\n            )}\n            <footer className=\"modal-card-foot\">\n              <button className=\"button is-text\" onClick={this.closeModal}>\n                Cancelar\n              </button>\n              <button className=\"button is-dark\" type=\"submit\">\n                Enviar\n              </button>\n            </footer>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { user } = this.props;\n    const { showForm } = this.state;\n\n    return (\n      <div className=\"contact-info\">\n        <h3>Datos personales</h3>\n        <div className=\"box\">\n          <div className=\"tlf\">\n            <FontAwesomeIcon className=\"icon\" icon={faPhone} />\n            {/* <a href={`tel://${user.phone}`}>{user.phone}</a> */}\n            <a onClick={() => this.setState({ showForm: true })}>6xx xxx xxx</a>\n          </div>\n          <div className=\"email\">\n            <FontAwesomeIcon className=\"icon\" icon={faAt} />\n            {/* <a href={`mailto:${user.email}`}>{user.email}</a> */}\n            <a onClick={() => this.setState({ showForm: true })}>\n              jxxxxxxx@xxx.com\n            </a>\n          </div>\n          <div className=\"www\">\n            <FontAwesomeIcon className=\"icon\" icon={faGlobeEurope} />\n            <a href={user.siteurl} target=\"_black\">\n              {user.sitename}\n            </a>\n          </div>\n          <div className=\"linkedin\">\n            <FontAwesomeIcon className=\"icon\" icon={faLinkedin} />\n            <a href={user.linkedinurl} target=\"_blank\">\n              {user.linkedinuser}\n            </a>\n          </div>\n          <div className=\"birthday\">\n            <FontAwesomeIcon className=\"icon\" icon={faBirthdayCake} />\n            <a>{user.birthday}</a>\n          </div>\n        </div>\n        {showForm ? this.renderForm() : null}\n      </div>\n    );\n  }\n}\n\nexport default ContactInfo;\n","import React, { Component, Fragment } from \"react\";\nimport \"./styles.css\";\n\nexport default class Skills extends Component {\n  render() {\n    const { skills } = this.props;\n\n    if (skills.length > 0) {\n      return (\n        <div className=\"skills\">\n          <h3>Conocimientos</h3>\n          <div className=\"box\">\n            {skills.map(skill => {\n              return (\n                <Fragment key={skill.id}>\n                  <span>{skill.name}</span>\n                  <progress\n                    className=\"progress is-small\"\n                    value={skill.percentage}\n                    max=\"100\"\n                  >\n                    {skill.percentage}%\n                  </progress>\n                </Fragment>\n              );\n            })}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\n\nclass Langs extends Component {\n  render() {\n    return (\n      <div className=\"skills\">\n        <h3>Idiomas</h3>\n        <div className=\"box\">\n          <span>Español</span>\n          <progress className=\"progress is-small\" value=\"100\" max=\"100\">\n            100%\n          </progress>\n          <span>Gallego</span>\n          <progress className=\"progress is-small\" value=\"100\" max=\"100\">\n            100%\n          </progress>\n          <span>Inglés</span>\n          <progress className=\"progress is-small\" value=\"50\" max=\"100\">\n            50%\n          </progress>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Langs;\n","import React from \"react\";\n\nconst Profile = ({ bio, bio_ref }) => (\n  <div className=\"user-profile\">\n    <h3>Perfil</h3>\n    <p className=\"cuote\">{bio}</p>\n    <p className=\"cuote_ref\">\n      <i>{bio_ref}</i>\n    </p>\n  </div>\n);\n\nexport default Profile;\n","import React from \"react\";\nimport \"./styles.css\";\n\nconst Experience = ({ experience }) => (\n  <div>\n    <h3>Experiencia</h3>\n    <div className=\"experience-data\">\n      {experience.map(exp => {\n        return (\n          <div className=\"experience-item\" key={exp.id}>\n            <div className=\"dates\">{`${exp.start} - ${exp.end}`}</div>\n            <div className=\"explanation\">\n              <h4>{exp.title}</h4>\n              <p>{exp.description}</p>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  </div>\n);\n\nexport default Experience;\n","import React from \"react\";\nimport \"./styles.css\";\n\nconst Education = ({ education }) => (\n  <div>\n    <h3>Estudios</h3>\n    <div className=\"education-data\">\n      {education.map(edu => {\n        return (\n          <div className=\"education-item\" key={edu.id}>\n            <div className=\"dates\">{`${edu.start} - ${edu.end}`}</div>\n            <div className=\"explanation\">\n              <h4>{edu.title}</h4>\n              <p>{edu.description}</p>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  </div>\n);\n\nexport default Education;\n","import React, { Component } from \"react\";\nimport TagCloud from \"react-tag-cloud\";\nimport randomColor from \"randomcolor\";\nimport \"./styles.css\";\n\nclass MyTagCloud extends Component {\n  componentDidMount() {\n    setInterval(() => {\n      this.forceUpdate();\n    }, 5000);\n  }\n  render() {\n    const { tags } = this.props;\n\n    return (\n      <div className=\"tag-cloud-container\">\n        <TagCloud\n          className=\"tag-cloud\"\n          random={Math.random}\n          style={{\n            fontFamily: \"sans-serif\",\n            fontSize: 13,\n            color: () => randomColor(),\n            padding: 10,\n            width: \"100%\",\n            height: \"500px\"\n          }}\n        >\n          {tags.map(tag => (\n            <div\n              key={tag.id}\n              style={{\n                fontSize: tag.percentage / 4,\n                fontStyle: Math.random() > 0.8 ? \"italic\" : \"normal\",\n                fontWeight:\n                  tag.percentage > 90 && Math.random() < 0.5 ? \"bold\" : \"normal\"\n              }}\n              rotate={Math.random() > 0.99 ? -90 : 0}\n            >\n              {tag.name}\n            </div>\n          ))}\n        </TagCloud>\n      </div>\n    );\n  }\n}\n\nexport default MyTagCloud;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./components/header\";\nimport ContactInfo from \"./components/contact-info\";\nimport Skills from \"./components/skills\";\nimport Langs from \"./components/langs\";\nimport Profile from \"./components/profile\";\nimport Experience from \"./components/experience\";\nimport Education from \"./components/education\";\nimport MyTagCloud from \"./components/tag-cloud\";\nimport ReactGA from \"react-ga\";\n\nimport \"../../../node_modules/bulma/css/bulma.css\";\nimport \"./style.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      education: [],\n      experience: [],\n      skills: []\n    };\n  }\n\n  componentDidMount() {\n    ReactGA.initialize(\"UA-148892916-1\");\n    ReactGA.pageview(window.location.pathname + window.location.search);\n\n    axios\n      .get(`//jgmcloud.000webhostapp.com/cvapi/`, { mode: \"cors\" })\n      .then(res => {\n        const data = res.data;\n        this.setState({\n          ...data\n        });\n      });\n  }\n\n  render() {\n    const { user, skills, experience, education } = this.state;\n    if (!user || !experience || !education || !skills) {\n      return null;\n    }\n\n    return (\n      <div className=\"container box\">\n        <Header user={user} />\n        <section className=\"content columns\">\n          <div className=\"col1 column is-one-third\">\n            <ContactInfo user={user} />\n            <Skills\n              skills={skills.filter(s => s.skill === \"1\" && s.percentage >= 75)}\n            />\n            <Langs />\n          </div>\n          <div className=\"col2 column\">\n            <Profile bio={user.bio} bio_ref={user.bio_ref} />\n            <Experience experience={experience} />\n            <Education education={education} />\n            <MyTagCloud tags={skills.filter(s => s.tags === \"1\")} />\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}